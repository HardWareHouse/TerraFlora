services:
  client:
    image: node:20-alpine
    user: node
    entrypoint: sh -c
    working_dir: /home/node
    command: '"npm install && npm run dev"'
    ports:
      - 5173:5173
    volumes:
      - ./client:/home/node

  server:
    image: node:20-alpine
    user: node
    tty: true
    stdin_open: true
    working_dir: /home/node
    entrypoint: sh -c
    command: '"npm install && npm run dev"'
    ports:
      - 8000:8000
    volumes:
      - ./server:/home/node
    environment:
      - POSTGRES_LINK=postgres://root:password@postgres:5432/app
      - MONGODB_CONNECTION_STRING=mongodb://mongo:27017/terraflora?authSource=admin
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password

  postgres:
    image: registry.gitlab.com/dalibo/postgresql_anonymizer:latest
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./entrypoint.sh:/docker-entrypoint-initdb.d/entrypoint.sh
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: app
    entrypoint: ["/bin/bash", "/docker-entrypoint-initdb.d/entrypoint.sh"]
    command: tail -f /dev/null

  adminer:
    image: adminer:4.8.1
    restart: unless-stopped
    ports:
      - 8080:8080

  mongo:
    image: mongo
    ports:
      - 127.0.0.1:27017:27017
    volumes:
      - mongo-data:/data/db
      - ./SampleCollections:/SampleCollections
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    working_dir: /SampleCollections

volumes:
  mongo-data:
  postgres-data:
